{"version":3,"file":"static/js/355.445a9560.chunk.js","mappings":"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","sources":["api/movie-api.js","webpack://goit-react-hw-05-movies/./src/components/CastListItem/CastListItem.module.css?e493","components/CastListItem/CastListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/CastList.module.css?4006","components/Cast/CastList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'af468b47558a0483ee60828cb8f72c98';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\n// search-movie\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\n// movie-details\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\n// movie-credits\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\n// movie-reviews\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};","// extracted by mini-css-extract-plugin\nexport default {\"castListItem\":\"CastListItem_castListItem__iTy6w\",\"castName\":\"CastListItem_castName__+Qlhd\",\"castImage\":\"CastListItem_castImage__GOW4u\"};","\nimport PropTypes from 'prop-types'; \nimport css from './CastListItem.module.css';\n\nexport const CastListItem = ({ profilePath, originalName, name }) => {\n  return (\n    <li className={css.castListItem}>\n      <img\n        className={css.castImage}\n        width=\"200px\"\n        height=\"300px\"\n        src={\n          profilePath\n            ? `https://image.tmdb.org/t/p/w300${profilePath}` : `https://fakeimg.pl/250x370/13e5f0/000?text=No+Image&font=lobster`\n        }\n        alt={originalName}\n      />\n      <p className={css.castName}>{name}</p>\n    </li>\n  );\n};\n\nCastListItem.propTypes = {\n  profilePath: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  originalName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastList_castList__MSaJ7\",\"castLabel\":\"CastList_castLabel__tEBxr\",\"notifyCast\":\"CastList_notifyCast__GE8bW\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'api/movie-api';\nimport { CastListItem } from 'components/CastListItem/CastListItem';\nimport css from './CastList.module.css';\n\nconst CastList = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <div>\n          <h2 className={css.castLabel}>Movie Cast</h2>\n          <ul className={css.castList}>\n            {cast.map(({ id, profile_path, original_name, name }) => (\n              <CastListItem\n                key={id}\n                id={id}\n                profilePath={profile_path }\n                originalName={original_name}\n                name={name}\n              />\n            ))}\n          </ul>\n        </div>\n      )}\n      {cast.length === 0 && <div className={css.notifyCast}>We don't have any cast for this movie.</div>}\n    </>\n  );\n};\n\nexport default CastList;"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","CastListItem","profilePath","originalName","name","_jsxs","className","css","children","_jsx","width","height","src","alt","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","t0","console","error","_Fragment","length","map","id","profile_path","original_name"],"sourceRoot":""}