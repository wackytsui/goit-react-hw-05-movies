{"version":3,"file":"static/js/615.ffc6fe21.chunk.js","mappings":"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","sources":["api/movie-api.js","components/MovieList/MovieList.module.css","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/MoviesPage.module.css?251f","pages/Movies/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'af468b47558a0483ee60828cb8f72c98';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieListItem_movieList__lI002\"};","import PropTypes from 'prop-types';\nimport css from './MovieListItem.module.css';\n\nimport {\n    Link\n}\n\nfrom 'react-router-dom';\n\nimport {\n    useLocation\n}\n\nfrom 'react-router-dom';\n\nexport const MovieListItem=({\n    id, title\n\n})=> {\n    const location=useLocation();\n\n    return (<li className= {\n            css.movieItem\n        }\n\n        key= {\n            id\n        }\n\n        > <Link to= {\n            `/movies/$ {\n                id\n            }\n\n            `\n        }\n\n        state= {\n                {\n                from: location,\n                movieTitle: 'Random string that i want to pass',\n            }\n        }\n\n        className= {\n            css.movieLink\n        }\n\n        > <h3> {\n            title\n        }\n\n        </h3> </Link> </li>);\n}\n\n;\n\nMovieListItem.propTypes= {\n    id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n}\n\n;","import PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport { MovieListItem } from 'components/MovieListItem/MovieListItem';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(({ id, title }) => (\n        <MovieListItem key={id} id={id} title={title} />\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"MoviesPage_inputWrapper__RY+g5\",\"input\":\"MoviesPage_input__tXUWp\"};","import { useEffect, useState } from 'react';\nimport { fetchMovieByQuery } from 'api/movie-api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport {\n  Outlet,\n  useSearchParams,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? 'Friends'; // Default search query is 'Friends'\n\n  const { movieId } = useParams();\n  console.log('movieId', movieId);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (!movieName.trim()) return;\n      setIsLoading(true);\n\n      try {\n        const movies = await fetchMovieByQuery(movieName);\n\n        console.log('movies', movies);\n        setMovies(movies);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieName]);\n\n  const handleNavigate = (replace = false) => {\n    console.log('Navigating to /test with replace:', replace);\n    navigate('/test', { replace });\n  };\n\n  return (\n    <div>\n      <div className={css.inputWrapper}>\n        <input\n          type=\"text\"\n          className={css.input}\n          onChange={e => updateQueryString(e.target.value)}\n          placeholder=\"Search movies...\"\n        />\n        {/* Removed the button since the search updates automatically with the input */}\n      </div>\n      <div className={css.buttonWrapper}>\n        <button onClick={() => handleNavigate(false)}>\n          Navigate with replace=false\n        </button>\n        <button onClick={() => handleNavigate(true)}>\n          Navigate with replace=true\n        </button>\n      </div>\n      {isLoading ? (\n        <p style={{ textAlign: 'center' }}>Loading...</p>\n      ) : (\n        <MovieList movies={movies} />\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MoviesPage;"],"names":["axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByQuery","_ref2","_callee2","movieName","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","MovieListItem","id","title","location","useLocation","_jsxs","className","css","children","Link","to","state","from","movieTitle","MovieList","movies","_jsx","map","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useParams","console","log","_useState3","_useState4","isLoading","setIsLoading","navigate","useNavigate","useEffect","fetchMovies","_movies","trim","t0","error","handleNavigate","replace","length","undefined","type","onChange","e","query","target","value","placeholder","onClick","style","textAlign","Outlet"],"sourceRoot":""}